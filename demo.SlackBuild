#!/bin/sh


PRGNAM=demo-package
VERSION=${VERSION:-1.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_acs}


# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi


CWD=$(pwd)
TMP=${TMP:-/tmp/acs-slackbuild}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}


set -e


rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
cd $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz --strip-components=1
chown -R root:root .
find . -perm 777 -exec chmod 755 {} \;
find . -perm 664 -exec chmod 644 {} \;


# apply patches to source
#patch -p1 < $CWD/files/6fe51a9a.patch
#patch -p1 < $CWD/files/55dd4d32.patch
#patch -p1 < $CWD/files/844ee7df.patch


# configure source
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --build=$ARCH-slackware-linux


# build source
make -j 4 all
make -j 4 install DESTDIR=$PKG


# install custom files
mkdir -p $PKG/etc/rc.d
mkdir -p $PKG/etc/logrotate.d
mkdir -p $PKG/etc/acs-packages/cof.d
mkdir -p $PKG/etc/acs-packages/symlink.d
mkdir -p $PKG/usr/share/snmp/mibs
cp $CWD/files/rc.package                 $PKG/etc/rc.d/rc.package.new
cp $CWD/files/package.logrotate          $PKG/etc/logrotate.d/package
cp $CWD/files/package.cof                $PKG/etc/cs-packages/cof.d/
cp $CWD/files/package.symlink            $PKG/etc/cs-packages/symlink.d/
chmod 644 $PKG/etc/rc.d/rc.package.new


# move files to correct location


# clean up files
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done


# copy documentation
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHOR CONTRIBUTORS COPYING ChangeLog README VERSION TODO \
   $PKG/usr/doc/$PRGNAM-$VERSION
cp $CWD/$PRGNAM.SlackBuild $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
cp $CWD/$PRGNAM.info       $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.info
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION


# install install scripts
mkdir -p $PKG/install
cp $CWD/slack-desc $PKG/install/slack-desc
cp $CWD/doinst.sh  $PKG/install/doinst.sh


# make package
cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

# end of build script
